[
  {
    $match:
      /**
       * query: The query in MQL.
       */
      {
        fechaProceso: ISODate("2023-04-30"),
      },
  },
  {
    $group: {
      _id: {
        cta_contable: "$cta_contable",
        rifCedula: "$rifCedula",
        fechaProceso: "$fechaProceso",
      },
      montos: {
        $push: {
          valor: "$capindif",
        },
      },
    },
  },
  {
    $unwind:
      /**
       * path: Path to the array field.
       * includeArrayIndex: Optional name for index.
       * preserveNullAndEmptyArrays: Optional
       *   toggle to unwind null and empty values.
       */
      {
        path: "$montos",
      },
  },
  {
    $group: {
      _id: {
        rifCedula: "$_id.rifCedula",
        fechaProceso: "$_id.fechaProceso",
      },
      variacionIDIBolivares: {
        $sum: {
          $toDouble: "$montos.valor",
        },
      },
    },
  },
  {
    $lookup:
      /**
       * from: The target collection.
       * localField: The local join field.
       * foreignField: The target join field.
       * as: The name for the results.
       * pipeline: Optional pipeline to run on the foreign collection.
       * let: Optional variables to use in the pipeline field stages.
       */
      {
        from: "sidis_tasaconversion",
        localField: "_id.fechaProceso",
        foreignField: "Fecha",
        as: "result",
      },
  },
  {
    $project:
      /**
       * specifications: The fields to
       *   include or exclude.
       */
      {
        rifCedula: "$_id.rifCedula",
        fechaProceso: "$_id.fechaProceso",
        variacionIDIBolivares: {
          $round: ["$variacionIDIBolivares", 4],
        },
        variacionIDIDolares: {
          $round: [
            {
              $divide: [
                "$variacionIDIBolivares",
                {
                  $arrayElemAt: [
                    "$result.Tasa_DOL",
                    0,
                  ],
                },
              ],
            },
            4,
          ],
        },
        variacionIDIEuros: {
          $round: [
            {
              $divide: [
                "$variacionIDIBolivares",
                {
                  $arrayElemAt: [
                    "$result.Tasa_EUR",
                    0,
                  ],
                },
              ],
            },
            4,
          ],
        },
        _id: 0,
      },
  },
  {
    $merge:
      /**
       * into: The target collection.
       * on: Fields to  identify.
       * let: Defined variables.
       * whenMatched: Action for matching docs.
       * whenNotMatched: Action for non-matching docs.
       */
      {
        into: "sidis_ingresoCarteraCredito",
        on: ["fechaProceso", "rifCedula"],
      },
  },
]