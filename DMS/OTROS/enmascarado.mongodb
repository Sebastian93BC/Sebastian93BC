[
  {
    $group:
      /**
       * _id: The id of the group.
       * fieldN: The first field name.
       */
      {
        _id: "$rifCedula",
        docs: {
          $push: "$$ROOT",
        },
      },
  },
  {
    $addFields:
      /**
       * newField: The new field name.
       * expression: The new field expression.
       */
      {
        rif: {
          $multiply: [
            {
              $floor: {
                $multiply: [
                  {
                    $rand: {},
                  },
                  100000000000,
                ],
              },
            },
          ],
        },
      },
  },
  {
    $sort:
      /**
       * Provide any number of field/order pairs.
       */
      {
        rif: 1,
      },
  },
  {
    $limit:
      /**
       * Provide the number of documents to limit.
       */
      100,
  },
  {
    $unwind:
      /**
       * path: Path to the array field.
       * includeArrayIndex: Optional name for index.
       * preserveNullAndEmptyArrays: Optional
       *   toggle to unwind null and empty values.
       */
      {
        path: "$docs",
      },
  },
  {
    $replaceRoot:
      /**
       * replacementDocument: A document or string.
       */
      {
        newRoot: {
          $mergeObjects: ["$docs", "$$ROOT"],
        },
      },
  },
  {
    $addFields:
      /**
       * newField: The new field name.
       * expression: The new field expression.
       */
      {
        rifCedula: "$rif",
        _id: "$docs._id",
        nombreCliente: {
          $concat: [
            {
              $substrCP: ["$nombreCliente", 0, 4],
            },
            "XXXXXXXXXXXX",
          ],
        },
        cuentaContable1: {
          $concat: [
            {
              $substrCP: [
                "$cuentaContable1",
                0,
                3,
              ],
            },
            "XXXXXXXXXXXX",
          ],
        },
      },
  },
  {
    $project:
      /**
       * specifications: The fields to
       *   include or exclude.
       */
      {
        docs: 0,
        rif: 0,
      },
  },
  {
    $merge:
      /**
       * into: The target collection.
       * on: Fields to  identify.
       * let: Defined variables.
       * whenMatched: Action for matching docs.
       * whenNotMatched: Action for non-matching docs.
       */
      {
        into: "muestra2",
        on: "_id",
        whenNotMatched: "insert",
      },
  },
]