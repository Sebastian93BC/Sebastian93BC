//CREAR INDICES
db.sidis_margen.getShardDistribution()
// clonar indices en otra coleción
db.currentOp({ns:'bdv.sidis_cliente_base_segmentacion'})


var indexes = db.People.getIndexes();

indexes.forEach(function(index){
    delete index.v;
    delete index.ns;
    var key = index.key;
    delete index.key

   db.People_clv.createIndex(key, index);
});




var indexes = [
{
  v: 2, key: {
    rif: 1,
    fecha_liquidacion: 1,
    _id:1
  },
  name: 'mergeIndex',
  sparse: false,
  unique:true
},
]



sh.shardCollection("bdv.Sidis_BDVcorreosSharded",{  
  _id: -1,
  email: 1,
},true)




indexes=[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  {
    v: 2,
    key: { rifCedula: 1, fechaProceso: -1 },
    name: 'Integracion',
    unique: true
  },
  { v: 2, key: { persona: 1 }, name: 'persona_1' },

  {
    v: 2,
    key: {
      fechaProceso: 1,
      origenSegmentacion: 1,
      nombreBanca: 1,
      nombreSegmento: 1,
      nombreNSE: 1,
      persona: 1
    },
    name: 'Consulta segmentacion simple'
  },
  {
    v: 2,
    key: { cantidadBeneficiario: 1 },
    name: 'Cantidad de beneficiarios'
  },
  {
    v: 2,
    key: { fechaProceso: -1, codigoBanca: 1 },
    name: 'Banca y fecha'
  },
  {
    v: 2,
    key: {
      fechaProceso: 1,
      persona: 1,
      origenSegmentacion: 1,
      nombreBanca: 1,
      nombreSegmento: 1,
      nombreSubsegmento: 1,
      nombreNSE: 1,
      generacion: 1,
      sexo: 1,
      state: 1,
      regionName: 1
    },
    name: 'Consulta Segmentacion'
  },
  {
    v: 2,
    key: { lastDigRif: 1, fechaProceso: -1 },
    name: 'Consulta actualización de segmento'
  },
  { v: 2, key: { tkNombreCliente: 1 }, name: 'SearchByName' },
  { v: 2, key: { updatedAt: -1,  fechaProceso: -1 }, name: 'Fecha de Actualización' },
]



db.createCollection("MessageSharded")

db.MessageSharded.createIndex(
  {  "rifCedula":1,
     "prd_nombre_producto": 1, },
  { unique: true })

  sh.shardCollection("tu_base_de_datos.MessageSharded", {
    "message_idString": 1,
    "email": 1
})


  //MARGEN PASIVO
db.createCollection("Margenpasivo")

db.Margenpasivo.createIndex(
  {
    rifCedula: 1,
    denominacion: 1,
    condicion: 1,
    fechaProceso: 1,
    _id: 1
  },
  { unique: true, name: "mergeIndex" },
  )
  
sh.shardCollection("bdv.Margenpasivo", {
  "rifCedula": 'hashed',
  "denominacion": 1,
  "condicion": 1,
  "fechaProceso": 1,
  })
  
  
var indexes = [
  {
    v: 2,
    key: {
      condicion: 1,
      fechaProceso: 1,
      rifCedula: -1,
      sidisMargen: 1,
      fechaUltimaTransacPasivos: 1
    },
    name: 'Consulta Margen'
  },
  { v: 2, key: { fechaProceso: 1 }, name: 'fechaProceso' },
  { v: 2, key: { rifCedula: 1 }, name: 'rifCedula' }
  ]

  indexes.forEach(function(index){
    delete index.v;
    delete index.ns;
    var key = index.key;
    delete index.key

   db.Margenpasivo.createIndex(key, index);
});





//activos

db.Margenactivo.createIndex(
    {
      rifCedula: 1,
      prd_nombre_producto: 1,
      _id: 1
    },
    { unique: true, name: "mergeIndex" },
    )

    sh.shardCollection("bdv.Margenactivo", {
      "rifCedula": 'hashed',
      "prd_nombre_producto": 1,
      })


////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////


  db.createCollection("Messagerecipient_1")

  db.Messagerecipient_1.createIndex(
    {
      messageid:1,
      email:1
    },
    { unique: true, name: "mergeIndex" },
    )

 
    
  sh.shardCollection("bdv.Messagerecipient_1", {
     messageid: "hashed",
    },
    {
      numInitialChunks: 240,
    })
    


    var indexes = [
    {
      v: 2,
      key: { 'integrationIds.mailgun': 1 },
      name: 'weebhookMessage'
    },
    { v: 2, key: { recipients: 1, _id: 1 }, name: 'MessagesAct' },
    {
      v: 2,
      key: {
        message_idString: 1,
        fidMD: 1,
        campaignId: 1,
        recipients: 1,
        'recipients.email': 1
      },
      name: '6_CampaingConsult'
    }
  ]

  indexes.forEach(function(index){
    delete index.v;
    delete index.ns;
    var key = index.key;
    delete index.key

   db.Message_test.createIndex(key, index);
});



processedWeb
event-data.message.headers.message-id
event-data.recipient
event-data.event
timestamp
    

sh.shardCollection("bdv.WebhookSharded", {
  "_id": "hashed",
 },
 {
   numInitialChunks: 240,
 })
 
   
   